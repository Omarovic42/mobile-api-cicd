name: ðŸ“± Mobile API CI/CD - Omarovic42 v5 (Diagnostic)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
        
    - name: Install dependencies
      run: |
        cd api
        npm ci
        
    - name: Run tests with proper permissions
      run: |
        cd api
        chmod +x node_modules/.bin/jest
        npm run test:ci
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: true
        tags: |
          ghcr.io/omarovic42/mobile-api:latest
          ghcr.io/omarovic42/mobile-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Job de diagnostic pour afficher des informations utiles
  diagnostics:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
    - name: Display SSH Debug Information
      run: |
        echo "=== SSH Client Version ==="
        ssh -V
        
        echo "=== Available SSH Keys ==="
        ls -la ~/.ssh || echo "No ~/.ssh directory found"
        
        echo "=== Current User ==="
        whoami
        
        echo "=== SSH Config ==="
        cat ~/.ssh/config || echo "No SSH config file found"
        
    - name: Check if SSH_PRIVATE_KEY Secret is Set
      run: |
        if [ "${{ secrets.SSH_PRIVATE_KEY }}" != "" ]; then
          echo "SSH_PRIVATE_KEY secret is set"
          # Print first 10 characters to verify it's in the correct format
          echo "First few characters: ${${{ secrets.SSH_PRIVATE_KEY }}:0:10}..."
        else
          echo "SSH_PRIVATE_KEY secret is NOT set"
        fi
        
    - name: Check if PROD_SSH_PRIVATE_KEY Secret is Set
      run: |
        if [ "${{ secrets.PROD_SSH_PRIVATE_KEY }}" != "" ]; then
          echo "PROD_SSH_PRIVATE_KEY secret is set"
        else
          echo "PROD_SSH_PRIVATE_KEY secret is NOT set"
        fi