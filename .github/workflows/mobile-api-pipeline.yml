name: ðŸ“± Mobile API CI/CD - Omarovic42 v11 (Staging First)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
        
    - name: Install dependencies
      run: |
        cd api
        npm ci
        
    - name: Run tests with proper permissions
      run: |
        cd api
        chmod +x node_modules/.bin/jest
        npm run test:ci
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: true
        tags: |
          ghcr.io/omarovic42/mobile-api:latest
          ghcr.io/omarovic42/mobile-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH Key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add staging host to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 35.233.124.20 >> ~/.ssh/known_hosts
        
    - name: Deploy to Staging via SSH
      run: |
        # Create deploy script
        cat > deploy.sh <<'EOF'
        #!/bin/bash
        set -e

        # Variables
        IMAGE="ghcr.io/omarovic42/mobile-api:${{ github.sha }}"
        TARGET_DIR="$HOME/mobile-api"

        # Create directory if needed
        mkdir -p $TARGET_DIR
        cd $TARGET_DIR
        
        echo "Using direct docker run command..."
        docker pull ${IMAGE}
        
        # Stop and remove any existing container
        docker stop mobile-api 2>/dev/null || true
        docker rm mobile-api 2>/dev/null || true
        
        # Run the new container
        docker run -d --name mobile-api \
            -p 3000:3000 \
            -e NODE_ENV=production \
            -e PORT=3000 \
            --restart always \
            ${IMAGE}
        
        # Verify container is running
        echo "Containers running:"
        docker ps
        echo "Deployment completed successfully!"
        EOF

        # Make script executable and copy to server
        chmod +x deploy.sh
        scp deploy.sh chelsea42_om@35.233.124.20:~/deploy.sh
        
        # Execute script on server
        ssh chelsea42_om@35.233.124.20 'bash ~/deploy.sh'