name: ðŸ“± Mobile API CI/CD - Omarovic42 v7 (RSA Key)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
        
    - name: Install dependencies
      run: |
        cd api
        npm ci
        
    - name: Run tests with proper permissions
      run: |
        cd api
        chmod +x node_modules/.bin/jest
        npm run test:ci
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: true
        tags: |
          ghcr.io/omarovic42/mobile-api:latest
          ghcr.io/omarovic42/mobile-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate fresh SSH key for testing
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Generate a new temporary key for testing
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/temp_key -N ""
        
        # Display the public key that should be added to authorized_keys
        echo "===== PUBLIC KEY THAT SHOULD BE ADDED TO SERVER ====="
        cat ~/.ssh/temp_key.pub
        echo "======================================================"
        
    - name: Setup SSH with secret key
      run: |
        # Now setup the actual key from secrets
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keygen -y -f ~/.ssh/id_ed25519 > ~/.ssh/id_ed25519.pub || echo "Failed to extract public key"
        
        # Display key information for debugging
        echo "===== KEY TYPE INFORMATION ====="
        ssh-keygen -l -f ~/.ssh/id_ed25519 || echo "Failed to get key info"
        
        # Configure SSH
        echo "Host staging" > ~/.ssh/config
        echo "  HostName 35.233.124.20" >> ~/.ssh/config
        echo "  User chelsea42_om" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
        
        chmod 600 ~/.ssh/config
        
        # Setup SSH agent
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519 || echo "Failed to add key to agent"
        
    - name: Add staging host to known_hosts
      run: |
        ssh-keyscan -H 35.233.124.20 >> ~/.ssh/known_hosts
        
    - name: Test SSH connectivity with debug
      run: |
        echo "Testing SSH connection with debug output..."
        ssh -vvv -o ConnectTimeout=10 -i ~/.ssh/id_ed25519 chelsea42_om@35.233.124.20 'echo "SSH connection test"' || echo "SSH connection failed"