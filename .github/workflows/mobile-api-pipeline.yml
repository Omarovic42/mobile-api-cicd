name: 📱 Mobile API CI/CD - Omarovic42 v2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
        
    - name: Install dependencies
      run: |
        cd api
        npm ci
        
    - name: Run tests with proper permissions
      run: |
        cd api
        chmod +x node_modules/.bin/jest
        npm run test:ci
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: true
        tags: |
          ghcr.io/omarovic42/mobile-api:latest
          ghcr.io/omarovic42/mobile-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH Key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add staging host to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 35.233.124.20 >> ~/.ssh/known_hosts
        
    - name: Setup Python and Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip3 install ansible==8.7.0 ansible-core==2.15.13
        
    - name: Test SSH connection to staging
      run: |
        ssh -o ConnectTimeout=10 omarovic42@35.233.124.20 'echo "SSH connection successful to staging"'
        
    - name: Deploy to Staging
      run: |
        cd ansible
        ansible-playbook -i inventory/hosts.yml playbooks/deploy.yml --limit staging -e "docker_image=ghcr.io/omarovic42/mobile-api:${{ github.sha }}"
      env:
        ANSIBLE_HOST_KEY_CHECKING: False

  deploy-production:
    needs: [test, build, deploy-staging]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH Key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add production host to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 34.38.164.180 >> ~/.ssh/known_hosts
        
    - name: Setup Python and Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip3 install ansible==8.7.0 ansible-core==2.15.13
        
    - name: Test SSH connection to production
      run: |
        ssh -o ConnectTimeout=10 omarovic42@34.38.164.180 'echo "SSH connection successful to production"'
        
    - name: Deploy to Production
      run: |
        cd ansible
        ansible-playbook -i inventory/hosts.yml playbooks/deploy.yml --limit production -e "docker_image=ghcr.io/omarovic42/mobile-api:${{ github.sha }}"
      env:
        ANSIBLE_HOST_KEY_CHECKING: False